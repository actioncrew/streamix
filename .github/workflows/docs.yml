name: deploy documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  docs:
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Copy additional markdown files
      - name: Copy additional docs
        run: |
          # Create the docs directory if it doesn't exist
          mkdir -p docs
          # Copy files from the projects subdirectory to the docs directory
          if [ -f projects/libraries/streamix/CHANGELOG.md ]; then cp projects/libraries/streamix/CHANGELOG.md docs/CHANGELOG.md; fi
          if [ -f projects/libraries/streamix/COROUTINES.md ]; then cp projects/libraries/streamix/COROUTINES.md docs/COROUTINES.md; fi

          # Copy files from the project root to the docs directory
          if [ -f CONTRIBUTING.md ]; then cp CONTRIBUTING.md docs/CONTRIBUTING.md; fi
          if [ -f CODE_OF_CONDUCT.md ]; then cp CODE_OF_CONDUCT.md docs/CODE_OF_CONDUCT.md; fi

      # 5️⃣ Generate Typedoc Markdown for API
      - name: Generate API docs
        run: |
          npx typedoc \
            --plugin typedoc-plugin-markdown \
            --out docs/api \
            --hideBreadcrumbs \
            --hidePageHeader

      # 6️⃣ Guarantee a predictable API link
      - name: Rename main API file
        run: |
          if [ -f docs/api/modules.md ]; then
            mv docs/api/modules.md docs/api/index.md
          fi

      # 7️⃣ Replace internal README links in API docs
      - name: Fix README links
        run: |
          find docs/api -name '*.md' -exec sed -i \
            -e 's|\(\]\)(\.\./README.md)|\1(./)|g' \
            -e 's|\(\]\)(\.\./\.\./README.md)|\1(../../)|g' {} +

      # 8️⃣ Use README as the main landing page and add correct API link
      - name: Use README as index page
        run: |
          # Copy the project's main README to be the documentation site's home page
          cp README.md docs/index.md

          # Add a section to the new index file that links to the API docs with the correct file extension
          echo "" >> docs/index.md
          echo "## API Reference" >> docs/index.md
          echo "You can find the detailed [API Reference here](./api/index.md)." >> docs/index.md

      # 9️⃣ Build VitePress site
      - name: Build documentation site
        run: npm run docs:build

      # 🔟 Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: github.ref == 'refs/heads/main'

      # 1️⃣1️⃣ Upload artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          path: docs/.vitepress/dist

      # 1️⃣2️⃣ Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/main'

